<?php

/**
 * @file
 * Installation requirements for beanstalkd.
 */

/**
 * Implements hook_requirements().
 */
function beanstalkd_requirements($phase) {
  $t = get_t();
  $requirements = array();

  if ($phase == 'runtime') {

    try {
      $queue = new BeanstalkdQueue(NULL, TRUE);

      $requirements['beanstalkd_queue_count'] = array(
        'title' => $t('Beanstalkd Queue count'),
        'value' => $queue->numberOfItems(),
        'severity' => REQUIREMENT_INFO,
        'description' => $t('Provides a count of all the number of items that are currently ready to be processed on the queue'),
      );

      if ($e = $queue->getError()) {
        $requirements['beanstalkd_last_error'] = array(
          'title' => $t('Beanstalkd Queue count error'),
          'value' => $t('%message in %file on line %line.', array(
            '%error' => $e->getCode(),
            '%message' => $e->getMessage(),
            '%file' => $e->getFile(),
            '%line' => $e->getLine(),
          )),
          'severity' => REQUIREMENT_ERROR,
          'description' => $t('An error has occurred while getting the current number of in the queue.'),
        );
      }
    }
    catch (Pheanstalk_Exception_ConnectionException $e) {
      $requirements['beanstalkd_last_error'] = array(
        'title' => $t('Beanstalkd Queue error'),
        'value' => $e->getMessage(),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('An error has occurred while communicating with beanstalkd'),
      );
    }
    catch (Pheanstalk_Exception $e) {
      $requirements['beanstalkd_last_error'] = array(
        'title' => $t('Beanstalkd Queue error'),
        'value' => '(' . get_class($e) . ') ' . $e->getMessage(),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('An error has occurred with PHPBeanstalk'),
      );
    }
    catch (Exception $e) {
      $requirements['beanstalkd_last_error'] = array(
        'title' => $t('Beanstalkd Queue error'),
        'value' => '(' . get_class($e) . ') ' . $e->getMessage(),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('An error has occurred.'),
      );
    }
  }

  return $requirements;
}
