<?php

/**
 * @file
 * Installation requirements for beanstalkd
 */

/**
 * Implementation of hook_requirements
 */
function beanstalkd_requirements($phase) {
  $t = get_t();
  $requirements = array();

  if ($phase == 'runtime') {
    $library = libraries_detect('pheanstalk');
    if (!$library['installed']) {
      $config = conf_path();
      $profile = variable_get('install_profile', 'default');
      $searchdir = array(
        "profile/$profile/libraries",
        'sites/all/libraries',
        "$config/libraries",
      );
    }
    else {
      $searchdir = array();
    }
    $requirements['beanstalkd_pheanstalk_path'] = array(
      'title' => $t('Beanstalkd Pheanstalk path'),
      'value' => $library['installed'] ? $library['library path'] : $t('Not found. Please ensure that Phpeanstalk is installed in one of the following paths; !paths', array('!paths' => '"' . implode('/pheanstalk", "', $searchdir) . '/pheanstalk"')),
      'severity' => $library['installed'] ? REQUIREMENT_INFO : REQUIREMENT_ERROR,
      'description' => $t('Pheanstalk is a pure PHP 5.2+ client for the <a href="http://kr.github.io/beanstalkd/">beanstalkd workqueue</a> and provides the connection class to allow Drupal to talk to the beanstalkd daemon. See <a href="https://github.com/pda/pheanstalk">https://github.com/pda/pheanstalk</a> for more information about Pheanstalk.'),
    );

    if ($library['installed']) {
      $requirements['beanstalkd_queue_version'] = array(
        'title' => $t('Beanstalkd Pheanstalk version'),
        'value' => version_compare($library['version'], '2.0.0', '>=') ? $library['version'] : '< 2.0.0',
        'severity' => REQUIREMENT_INFO,
      );
    }
    
    try {
      $queue = new BeanstalkdQueue(NULL, TRUE);

      $requirements['beanstalkd_queue_count'] = array(
        'title' => $t('Beanstalkd Queue count'),
        'value' => $queue->numberOfItems(),
        'severity' => REQUIREMENT_INFO,
        'description' => $t('Provides a count of all the number of items that are currently ready to be processed on the queue'),
      );

      if ($e = $queue->getError()) {
        $requirements['beanstalkd_last_error'] = array(
          'title' => $t('Beanstalkd Queue count error'),
          'value' => $t('%message in %file on line %line.', array('%error' => $e->getCode(), '%message' => $e->getMessage(), '%file' => $e->getFile(), '%line' => $e->getLine())),
          'severity' => REQUIREMENT_ERROR,
          'description' => $t('An error has occurred while getting the current number of in the queue.'),
        );
      }
    }
    catch (Pheanstalk_Exception_ConnectionException $e) {
      $requirements['beanstalkd_last_error'] = array(
        'title' => $t('Beanstalkd Queue error'),
        'value' => $e->getMessage(),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('An error has occurred while communicating with beanstalkd'),
      );
    }
    catch (Pheanstalk_Exception $e) {
      $requirements['beanstalkd_last_error'] = array(
        'title' => $t('Beanstalkd Queue error'),
        'value' => '(' . get_class($e) . ') ' . $e->getMessage(),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('An error has occurred with PHPBeanstalk'),
      );
    }
    catch (Exception $e) {
      $requirements['beanstalkd_last_error'] = array(
        'title' => $t('Beanstalkd Queue error'),
        'value' => '(' . get_class($e) . ') ' . $e->getMessage(),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('An error has occurred.'),
      );
    }
  }

  return $requirements;
}
