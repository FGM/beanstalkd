<?php

/**
 * @file
 * Provide core implementation of beanstalkd support for Queues
 */

use Drupal\beanstalkd\Queue\QueueBeanstalkd;

/**
 * Implements hook_menu()
 */
function beanstalkd_menu() {
  $items = array();

  $items['admin/reports/beanstalkd'] = array(
    'title' => 'Beanstalkd Stats',
    'description' => 'Retreives statistics from the beanstalkd server.',
    'route_name' => 'beanstalkd_admin',
  );

  return $items;
}


/**
 * Implements hook_permission()
 */
function beanstalkd_permission() {
  return array(
    'access beanstalkd stats' => array(
      'title' => t('Access Beanstalkd Stats'),
      'description' => t('Access the statistics report for the beanstalkd server.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function beanstalkd_libraries_info() {
  $info = array();

  $info['pheanstalk'] = array(
    'name' => t('Pheanstalk'),
    'vendor url' => 'https://github.com/pda/pheanstalk',
    'download url' => 'https://github.com/pda/pheanstalk/tags',
    'path' => 'classes',
    'version arguments' => array(
      'file' => 'classes/Pheanstalk/Pheanstalk.php',
      'pattern' => '/VERSION\s+=\s+\'(\d+\.\d+\.\d+)\';/',
      'lines' => 20,
      'cols' => 255,
    ),
    'files' => array(
      'php' => array(
        'Pheanstalk/PheanstalkInterface.php' => array(
          'namespace' => 'Pheanstalk',
        ),
      ),
    ),
  );

  return $info;
}

/**
 * Load the pheanstalk library.
 */
function beanstalkd_load_pheanstalk() {
  $library = libraries_load('pheanstalk');

  if (!$library['loaded']) {
    throw new Exception('Unable to load Pheanstalk library');
  }

  return TRUE;
}

/**
 * Get Queue Parameters
 */
function beanstalkd_get_queue_options($name) {
  static $options = array();

  if (!isset($options[$name])) {
    $options[$name] = settings()->get('beanstalk_queue_' . $name, array());
    $defaults = settings()->get('beanstalk_default_queue', array()) + array(
      'host' => settings()->get('beanstalkd_host', 'localhost'),
      'port' => settings()->get('beanstalkd_port', \Pheanstalk_PheanstalkInterface::DEFAULT_PORT),
      'fork' => FALSE,
      'reserve_timeout' => 0,
      'ttr' => \Pheanstalk_PheanstalkInterface::DEFAULT_TTR,
      'priority' => \Pheanstalk_PheanstalkInterface::DEFAULT_PRIORITY,
      'release_delay' => \Pheanstalk_PheanstalkInterface::DEFAULT_DELAY,
      'forked_extra_timeout' => FALSE,
      'forked_extra_items' => FALSE,
      'delay' => \Pheanstalk_PheanstalkInterface::DEFAULT_DELAY,
    );
    $options[$name] += $defaults;
  }

  return $options[$name];
}

/**
 * Get a list of all queues which have drush enabled.
 *
 * @param $host
 *  The list of all the queue which are using this specified host
 *
 * @return
 *  If a host is specified then it returns an array of all the settings for the queue.
 *  otherwise if no host is specified then it will return an array keyed by host for all
 *  with the settings for all queues.
 */
function beanstalkd_get_host_queues($host = NULL, $queue_name = NULL) {
  static $queue_list;

  if (!isset($queue_list)) {
    $queue_list = array();
    $cron_queues = module_invoke_all('queue_info');
    drupal_alter('queue_info', $cron_queues);

    // Additionally, check for modules implementing hook_queue_info.
    $queues = module_invoke_all('queue_info');
    drupal_alter('queue_info', $queues);
    $queues = array_merge($queues, $cron_queues);

    foreach ($queues as $queue => $settings) {
      $name = 'queue_class_' . $queue;
      $options = beanstalkd_get_queue_options($queue);
      if (variable_get($name, variable_get('queue_default_class', 'SystemQueue')) == 'QueueBeanstalkd') {
        $settings['options'] = $options;
        $queue_list[$options['host'] . ':' . $options['port']][$queue] = $settings;
      }
    }
  }

  if ($queue_name) {
    $options = beanstalkd_get_queue_options($queue_name);
    $host = $options['host'] . ':' . $options['port'];
    return isset($queue_list[$host][$queue_name]) ? $queue_list[$host][$queue_name] : array();
  }
  if ($host) {
    return isset($queue_list[$host]) ? $queue_list[$host] : array();
  }
  return $queue_list;
}

function beanstalkd_get_queues($hostname = NULL) {
  $queues = beanstalkd_get_host_queues($hostname);

  if ($hostname) {
    $names = array_keys($queues);
  }
  else {
    $names = array();
    foreach ($queues as $hostname => $settings) {
      $names = array_merge($names, array_keys($settings));
    }
  }

  return $names;
}
