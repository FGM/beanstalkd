<?php

/**
 * @file
 * Provide core implementation of beanstalkd support for Queues
 */

/**
 * Implementation of hook_drupal_queue_load_classes().
 */
function beanstalkd_drupal_queue_load_classes() {
  module_load_include('inc', 'beanstalkd', 'beanstalkd.queue');
}

/**
 * Get Pheanstalk path
 */
function beanstalkd_pheanstalk_get_path() {
  static $path = NULL;

  if (isset($path)) {
    return $path;
  }

  $config = conf_path();
  $profile = variable_get('install_profile', 'default');
  $searchdir = array();

  if (file_exists("profile/$profile/libraries")) {
    $searchdir[] = "profile/$profile/libraries";
  }

  $searchdir[] = 'sites/all/libraries';

  if (file_exists("$config/libraries")) {
    $searchdir[] = "$config/libraries";
  }
  
  $searchdir[] = drupal_get_path('module', 'beanstalkd');

  foreach ($searchdir as $dir) {
    if (file_exists("$dir/pheanstalk/classes/Pheanstalk/ClassLoader.php")) {
      $path = "$dir/pheanstalk";
      return $path;
    }
  }

  return FALSE;
}

/**
 * Load Pheanstalk
 */
function beanstalkd_load_pheanstalk() {
  if (!class_exists('Pheanstalk_ClassLoader') && ($path = beanstalkd_pheanstalk_get_path())) {
    include_once "$path/classes/Pheanstalk/ClassLoader.php";

    Pheanstalk_ClassLoader::register("$path/classes");
  }

  return class_exists('Pheanstalk_ClassLoader');
}

/**
 * Get Queue Parameters
 */
function beanstalkd_get_queue_options($name) {
  static $options = array();

  if (!isset($options[$name])) {
    $options[$name] = variable_get('beanstalk_queue_' . $name, array());
    $defaults = variable_get('beanstalk_default_queue', array()) + array(
      'host' => variable_get('beanstalkd_host', 'localhost'),
      'port' => variable_get('beanstalkd_port', Pheanstalk::DEFAULT_PORT),
      'fork' => FALSE,
      'reserve_timeout' => 0,
      'ttr' => Pheanstalk::DEFAULT_TTR,
      'priority' => Pheanstalk::DEFAULT_PRIORITY,
      'release_delay' => Pheanstalk::DEFAULT_DELAY,
      'forked_extra_timeout' => FALSE,
      'forked_extra_items' => FALSE,
    );
    $options[$name] += $defaults;
  }

  return $options[$name];
}

/**
 * Get a list of all queues which have drush enabled.
 *
 * @param $host
 *  The list of all the queue which are using this specified host
 *
 * @return
 *  If a host is specified then it returns an array of all the settings for the queue.
 *  otherwise if no host is specified then it will return an array keyed by host for all
 *  with the settings for all queues.
 */
function beanstalkd_get_host_queues($host = NULL, $queue_name = NULL) {
  static $queue_list;
  
  if (!isset($queue_list)) {
    $queue_list = array();
    $queues = module_invoke_all('cron_queue_info');
    drupal_alter('cron_queue_info', $queues);

    foreach ($queues as $queue => $settings) {
      $name = 'queue_class_' . $queue;
      $options = beanstalkd_get_queue_options($queue);
      if (variable_get($name, variable_get('queue_default_class', 'SystemQueue')) == 'BeanstalkdQueue') {
        $settings['options'] = $options;
        $queue_list[$options['host'] . ':' . $options['port']][$queue] = $settings;
      }
    }
  }
  
  if ($queue_name) {
    $options = beanstalkd_get_queue_options($queue_name);
    $host = $options['host'] . ':' . $options['port'];
    return isset($queue_list[$host][$queue_name]) ? $queue_list[$host][$queue_name] : array();
  }
  if ($host) {
    return isset($queue_list[$host]) ? $queue_list[$host] : array();
  }
  return $queue_list;
}

function beanstalkd_get_queues($hostname = NULL) {
  $queues = beanstalkd_get_host_queues($hostname);
  
  if ($hostname) {
    $names = array_keys($queues);
  }
  else {
    $names = array();
    foreach ($queues as $hostname => $settings) {
      $names = array_merge($names, array_keys($settings));
    }
  }

  return $names;
}