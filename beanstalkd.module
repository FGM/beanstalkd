<?php
// $Id$

/**
 * @file
 * Provide core implementation of beanstalkd support for Queues
 */

/**
 * Implements hook_menu().
 */
function beanstalkd_menu() {
  $items = array();

  $items['admin/build/beanstalkd'] = array(
    'title' => 'Beanstalkd',
    'description' => 'Configuration settings Beanstalk integration for Queues',
    'access arguments' => array('access administration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('beanstalkd_admin_settings'),
    'file' => 'beanstalkd.admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_drupal_queue_load_classes().
 */
function beanstalkd_drupal_queue_load_classes() {
  module_load_include('inc', 'beanstalkd', 'beanstalkd.queue');
}

/**
 * Get Pheanstalk path
 */
function beanstalkd_pheanstalk_get_path() {
  static $path = NULL;

  if (isset($path)) {
    return $path;
  }

  $config = conf_path();
  $profile = variable_get('install_profile', 'default');
  $searchdir = array();

  if (file_exists("profile/$profile/libraries")) {
    $searchdir[] = "profile/$profile/libraries";
  }

  $searchdir[] = 'sites/all/libraries';

  if (file_exists("$config/libraries")) {
    $searchdir[] = "$config/libraries";
  }

  foreach ($searchdir as $dir) {
    if (file_exists("$dir/pheanstalk/classes/Pheanstalk/ClassLoader.php")) {
      $path = "$dir/pheanstalk";
      return $path;
    }
  }

  return FALSE;
}

/**
 * Load Pheanstalk
 */
function beanstalkd_load_pheanstalk() {
  if (!class_exists('Pheanstalk_ClassLoader') && ($path = beanstalkd_pheanstalk_get_path())) {
    include_once "$path/classes/Pheanstalk/ClassLoader.php";

    Pheanstalk_ClassLoader::register("$path/classes");
  }

  return class_exists('Pheanstalk_ClassLoader');
}

/**
 * Get Queue Parameters
 */
function beanstalkd_get_queue_options($name) {
  static $options = array();

  if (!isset($options[$name])) {
    $options[$name] = variable_get('beanstalk_queue_' . $name, array());
    $options[$name] += array(
      'host' => variable_get('beanstalkd_host', 'localhost'),
      'port' => variable_get('beanstalkd_port', Pheanstalk::DEFAULT_PORT),
      'fork' => FALSE,
      'reserve_timeout' => 0
    );
  }

  return $options[$name];
}